Create a full-stack web application called "ShopGuardian" using React + Tailwind CSS for the frontend, Python FastAPI for the backend, and PostgreSQL as the database, hosted and runnable on Replit. The app should simulate a real-time cyber deception system. Implement the following: (1) A route at "/deception" that serves a fake Walmart-like login page and a dummy dashboard with fake product inventory and user data using Faker.js or hardcoded JSON; every interaction (login attempt, clicks, form submissions) should send POST requests to a backend endpoint /api/log that logs attacker behavior. (2) The FastAPI backend should expose a POST /api/log endpoint that accepts JSON data (ip_address, path_accessed, action, timestamp, user_agent) and stores it in a PostgreSQL table called deception_logs with corresponding columns and appropriate types; also expose a GET /api/logs endpoint to return all logs with support for optional filters like IP or date. (3) Create a secure admin route "/admin" that shows a dashboard for Walmart's cybersecurity team with: a table of logs, a real-time feed of actions, bar chart for common attack types, and filter/search by IP or action; also include a section called “AI Threat Analysis” where the user can click a button “Analyze Last 10 Attacks” that sends the 10 most recent logs to a POST /api/analyze endpoint. (4) The /api/analyze endpoint should use OpenAI GPT (via API key from environment variable) to summarize attacker behavior in plain English (e.g., “Detected a credential stuffing attempt from suspicious IP with brute force behavior”) and return that to frontend to display as a dark card. (5) Ensure all routes are connected and navigable via a top navbar, ensure dark theme UI throughout, and that everything works end-to-end: frontend logs actions → backend stores them → admin dashboard fetches and filters them → AI analyzes them. Include working SQL table schema creation in FastAPI startup if the table does not exist. Ensure the project is runnable on Replit with all code in one place and environment variables properly referenced.
